spring:
  application:
    name: <%= appName %>
  profiles:
    active: local
<%_ if (authenticationTypes && authenticationTypes.length > 0) { _%>
  security:
<%_ if (authenticationTypes.includes('oauth2-resource')) { _%>
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${OAUTH2_ISSUER_URI:<%= oauth2IssuerUri %>}
<%_ } _%>
<%_ if (authenticationTypes.includes('oauth2-client')) { _%>
    oauth2:
      client:
        registration:
<%_ if (oauth2Providers.includes('google')) { _%>
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope: openid,profile,email
<%_ } _%>
<%_ if (oauth2Providers.includes('github')) { _%>
          github:
            client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
            client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
            scope: user:email
<%_ } _%>
<%_ if (oauth2Providers.includes('microsoft')) { _%>
          microsoft:
            client-id: ${MICROSOFT_CLIENT_ID:your-microsoft-client-id}
            client-secret: ${MICROSOFT_CLIENT_SECRET:your-microsoft-client-secret}
            scope: openid,profile,email
<%_ } _%>
<%_ if (oauth2Providers.includes('keycloak')) { _%>
          keycloak:
            client-id: ${KEYCLOAK_CLIENT_ID:your-keycloak-client-id}
            client-secret: ${KEYCLOAK_CLIENT_SECRET:your-keycloak-client-secret}
            scope: openid,profile,email
<%_ } _%>
        provider:
<%_ if (oauth2Providers.includes('google')) { _%>
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id
<%_ } _%>
<%_ if (oauth2Providers.includes('github')) { _%>
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
<%_ } _%>
<%_ if (oauth2Providers.includes('microsoft')) { _%>
          microsoft:
            authorization-uri: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/common/oauth2/v2.0/token
            user-info-uri: https://graph.microsoft.com/oidc/userinfo
            user-name-attribute: sub
<%_ } _%>
<%_ if (oauth2Providers.includes('keycloak')) { _%>
          keycloak:
            issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8080/realms/master}
<%_ } _%>
<%_ } _%>
<%_ } _%>
  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: none
      jdbc:
        time_zone: UTC
        batch_size: 25
      order_inserts: true
      order_updates: true
    properties:
      hibernate:
        format_sql: false
        generate_statistics: false
        query:
          fail_on_pagination_over_collection_fetch: true
          in_clause_parameter_padding: true
          plan_cache_max_size: 4096
        connection:
          provider_disables_autocommit: true
        jdbc:
          lob:
            non_contextual_creation: true
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/appdb}
    username: ${DATABASE_USERNAME:appuser}
    password: ${DATABASE_PASSWORD:secret}
    hikari:
      auto-commit: false
      data-source-properties:
        ApplicationName: ${spring.application.name}
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
<%_ if (dbMigrationTool === 'flywaydb') { _%>
  flyway:
    locations: classpath:/db/migration/{vendor}
<%_ } _%>

server:
  port: 8080
  uri: http://localhost
  shutdown: graceful

management:
  endpoints:
    web:
      exposure:
        include: configprops,env,health,info,logfile,loggers,metrics,prometheus
  endpoint:
    health:
      show-details: always

<%_ if (authenticationTypes && authenticationTypes.includes('jwt')) { _%>
# JWT Configuration
app:
  security:
    jwt:
      secret: ${JWT_SECRET:mySecretKey}
      expiration: ${JWT_EXPIRATION:86400000}
<%_ } _%>


<%_ if (features.includes('elk')) { _%>
# ELK Configuration
application:
  logstash-host: localhost
<%_ } _%>
